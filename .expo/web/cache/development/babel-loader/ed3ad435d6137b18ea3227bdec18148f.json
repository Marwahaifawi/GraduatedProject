{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\MIDITECH\\\\Desktop\\\\GraduatedProject-master\\\\components\\\\Screens\\\\LogIn\\\\LogIn.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Styles from \"./LogInStyles.js\";\nimport Logo from \"../Logo\";\nimport { theme } from \"../../../core/theme.js\";\nimport ButtonItem from \"../../Buttons/Buttons\";\nimport Title from \"../../Texts/Title.js\";\nimport BackButton from \"../../Buttons/BackButton.js\";\nimport { emailValidator } from \"../../../helpers/emailValidator\";\nimport { passwordValidator } from \"../../../helpers/passwordValidator\";\nexport default function LogIn(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var onLoginPressed = function onLoginPressed() {\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError) {\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      return;\n    }\n\n    navigation.navigate('UserHomePage');\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: {\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(BackButton, {\n    goBack: function goBack() {\n      return navigation.navigate('UserHomePage');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 35\n    }\n  })), React.createElement(View, {\n    style: Styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), React.createElement(Title, {\n    color: {\n      color: theme.colors.primary\n    },\n    size: {\n      fontSize: 20\n    },\n    fontFamily: {\n      fontFamily: 'FontThree'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Login\"), React.createElement(TextInput, {\n    style: Styles.textInput,\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: Styles.textInput,\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!password.error,\n    errorText: password.error,\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: Styles.forgotPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('ResetPasswordScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: Styles.forgot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Forgot your password?\"))), React.createElement(View, {\n    style: Styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    onPress: onLoginPressed,\n    title: 'Login',\n    color: theme.colors.surface,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: Styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: theme.colors.primary,\n      fontFamily: 'FontThree'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Don\\u2019t have an account?\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.replace('SignUp');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: Styles.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \" Sign up\")))));\n}","map":{"version":3,"sources":["C:/Users/MIDITECH/Desktop/GraduatedProject-master/components/Screens/LogIn/LogIn.js"],"names":["React","useState","Styles","Logo","theme","ButtonItem","Title","BackButton","emailValidator","passwordValidator","LogIn","navigation","value","error","email","setEmail","password","setPassword","onLoginPressed","emailError","passwordError","navigate","padding","container","color","colors","primary","fontSize","fontFamily","textInput","text","forgotPassword","forgot","button","surface","row","replace","link"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { TouchableOpacity, View,Text , TextInput, Button  } from 'react-native';\nimport Styles from './LogInStyles.js';\nimport Logo from '../Logo';\nimport { theme } from '../../../core/theme.js';\nimport ButtonItem from '../../Buttons/Buttons';\nimport Title from '../../Texts/Title.js';\nimport BackButton from '../../Buttons/BackButton.js';\nimport { emailValidator } from '../../../helpers/emailValidator';\nimport { passwordValidator } from '../../../helpers/passwordValidator';\nexport default function LogIn({ navigation }) {\n  const [email, setEmail] = useState({ value: '', error: '' })\n  const [password, setPassword] = useState({ value: '', error: '' })\n\n  const onLoginPressed = () => {\n    const emailError = emailValidator(email.value)\n    const passwordError = passwordValidator(password.value)\n    if (emailError || passwordError) {\n      setEmail({ ...email, error: emailError })\n      setPassword({ ...password, error: passwordError })\n      return\n    }\n    navigation.navigate('UserHomePage')\n  }\n\n  return (\n\n    <>\n    <View style={{ padding: 20,}}><BackButton goBack={() => navigation.navigate('UserHomePage')} /></View>\n    \n    \n    <View style={Styles.container}>\n      <Logo />\n      <Title color={{ color: theme.colors.primary }} size={{ fontSize: 20 }} fontFamily={{ fontFamily: 'FontThree' }}>Login</Title>\n      <TextInput\n        style={Styles.textInput}\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email.value}\n        onChangeText={(text) => setEmail({ value: text, error: '' })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n        placeholder=\"Email\" />\n      <TextInput\n        style={Styles.textInput}\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={(text) => setPassword({ value: text, error: '' })}\n        error={!!password.error}\n        errorText={password.error}\n        placeholder=\"Password\"\n        secureTextEntry />\n      <View style={Styles.forgotPassword}>\n        <TouchableOpacity\n          onPress={() => navigation.navigate('ResetPasswordScreen')}\n        >\n          <Text style={Styles.forgot}>Forgot your password?</Text>\n        </TouchableOpacity>\n      </View>\n      <View style={Styles.button}>\n        <Button\n          onPress={onLoginPressed}\n          title={'Login'}\n          color={theme.colors.surface} /></View>\n      <View style={Styles.row}>\n        <Text style={{ color: theme.colors.primary, fontFamily: 'FontThree' }}>Don’t have an account?</Text>\n        <TouchableOpacity onPress={() => navigation.replace('SignUp')}>\n          <Text style={Styles.link}> Sign up</Text>\n        </TouchableOpacity>\n      </View>\n    </View></>\n   \n  )\n}\n"]},"metadata":{},"sourceType":"module"}