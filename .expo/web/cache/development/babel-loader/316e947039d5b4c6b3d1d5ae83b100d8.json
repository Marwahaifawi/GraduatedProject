{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\MIDITECH\\\\Desktop\\\\GraduatedProject-master\\\\components\\\\Buttons\\\\Buttons.js\";\n\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { theme } from \"../../core/theme\";\nimport Styles from \"./ButtonsStyle\";\n\nvar ButtonItem = function ButtonItem(props) {\n  var content = props.content,\n      OnPress = props.OnPress;\n  var backgroundColor = content === \"Skip\" ? \"#ffffff\" : theme.colors.primary;\n  var textColor = content === \"Skip\" ? theme.colors.primary : \"#ffffff\";\n  return React.createElement(View, {\n    styles: Styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, React.createElement(Pressable, {\n    style: [Styles.buttonStyled, {\n      backgroundColor: backgroundColor\n    }],\n    onPress: function onPress() {\n      return OnPress();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: [Styles.buttonText, {\n      color: textColor\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, content)));\n};\n\nexport default ButtonItem;","map":{"version":3,"sources":["C:/Users/MIDITECH/Desktop/GraduatedProject-master/components/Buttons/Buttons.js"],"names":["React","theme","Styles","ButtonItem","props","content","OnPress","backgroundColor","colors","primary","textColor","container","buttonStyled","buttonText","color"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,SAASC,KAAT;AACA,OAAOC,MAAP;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC5B,MAAQC,OAAR,GAA6BD,KAA7B,CAAQC,OAAR;AAAA,MAAiBC,OAAjB,GAA6BF,KAA7B,CAAiBE,OAAjB;AACA,MAAMC,eAAe,GAAGF,OAAO,KAAK,MAAZ,GAAqB,SAArB,GAAiCJ,KAAK,CAACO,MAAN,CAAaC,OAAtE;AACA,MAAMC,SAAS,GAAGL,OAAO,KAAK,MAAZ,GAAqBJ,KAAK,CAACO,MAAN,CAAaC,OAAlC,GAA4C,SAA9D;AACA,SACE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEP,MAAM,CAACS,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE,CAACT,MAAM,CAACU,YAAR,EAAsB;AAAEL,MAAAA,eAAe,EAAEA;AAAnB,KAAtB,CADT;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMD,OAAO,EAAb;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACJ,MAAM,CAACW,UAAR,EAAoB;AAAEC,MAAAA,KAAK,EAAEJ;AAAT,KAApB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyDL,OAAzD,CAJF,CADF,CADF;AAUD,CAdD;;AAeA,eAAeF,UAAf","sourcesContent":["import * as React from \"react\";\nimport { View, Pressable, Text } from \"react-native\";\nimport { theme } from \"../../core/theme\";\nimport Styles from \"./ButtonsStyle\";\nconst ButtonItem = (props) => {\n  const { content, OnPress } = props;\n  const backgroundColor = content === \"Skip\" ? \"#ffffff\" : theme.colors.primary;\n  const textColor = content === \"Skip\" ? theme.colors.primary : \"#ffffff\";\n  return (\n    <View styles={Styles.container}>\n      <Pressable\n        style={[Styles.buttonStyled, { backgroundColor: backgroundColor }]}\n        onPress={() => OnPress()}\n      >\n        <Text style={[Styles.buttonText, { color: textColor }]}>{content}</Text>\n      </Pressable>\n    </View>\n  );\n};\nexport default ButtonItem;\n"]},"metadata":{},"sourceType":"module"}