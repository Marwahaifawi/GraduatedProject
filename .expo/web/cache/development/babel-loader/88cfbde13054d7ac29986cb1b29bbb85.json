{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\MIDITECH\\\\Desktop\\\\GraduatedProject-master\\\\components\\\\Screens\\\\SignUp\\\\SignUp.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { nameValidator } from \"../../../helpers/nameValidator\";\nimport Logo from \"../Logo\";\nimport TextInput from \"../../Texts/TextInput\";\nimport { theme } from \"../../../core/theme\";\nimport { emailValidator } from \"../../../helpers/emailValidator\";\nimport { passwordValidator } from \"../../../helpers/passwordValidator\";\nimport BackButton from \"../../Buttons/BackButton\";\nimport Title from \"../../Texts/Title\";\nexport default function SignUp(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      emailAdd = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      passwordFirst = _useState6[0],\n      setPassword = _useState6[1];\n\n  var onSignUpPressed = function onSignUpPressed() {\n    var nameError = nameValidator(userName.value);\n    var emailError = emailValidator(emailAdd.value);\n    var passwordError = passwordValidator(passwordFirst.value);\n\n    if (emailError || passwordError || nameError) {\n      setName(_objectSpread(_objectSpread({}, userName), {}, {\n        error: nameError\n      }));\n      setEmail(_objectSpread(_objectSpread({}, emailAdd), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, passwordFirst), {}, {\n        error: passwordError\n      }));\n      return;\n    } else {\n      fetch(\"https://192.168.1.104:1322/signup\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          emailAdd: emailAdd,\n          passwordFirst: passwordFirst,\n          userName: userName\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (res) {\n        if (res.success === true) {\n          alert(res.message);\n\n          _this.props.navigation.reset({\n            index: 0,\n            routes: [{\n              name: \"HomePage\"\n            }]\n          });\n        } else {\n          alert(res.message);\n          console.log(res);\n          console.log(\"err\");\n        }\n      }).done();\n    }\n\n    ;\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: {\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(BackButton, {\n    goBack: function goBack() {\n      return navigation.navigate('HomePage');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 40\n    }\n  })), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 108\n    }\n  }, React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), React.createElement(Title, {\n    color: {\n      color: theme.colors.primary\n    },\n    size: {\n      fontSize: 20\n    },\n    fontFamily: {\n      fontFamily: 'FontThree'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Create New Account\"), React.createElement(TextInput, {\n    style: styles.textInput,\n    label: \"Name\",\n    returnKeyType: \"next\",\n    value: userName.value,\n    onChangeText: function onChangeText(text) {\n      return setName({\n        value: text,\n        error: \"\"\n      });\n    },\n    error: !!userName.error,\n    errorText: userName.error,\n    placeholder: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: emailAdd.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: \"\"\n      });\n    },\n    error: !!emailAdd.error,\n    errorText: emailAdd.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    placeholder: \"Email Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: passwordFirst.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: \"\"\n      });\n    },\n    error: !!passwordFirst.error,\n    errorText: passwordFirst.error,\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    onPress: onSignUpPressed,\n    title: 'Sign Up',\n    color: theme.colors.surface,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: theme.colors.primary,\n      fontFamily: 'FontThree'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"Already have an account?\", \" \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.replace(\"LogIn\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Login\")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 50\n  },\n  textInput: {\n    height: 50,\n    width: '100%',\n    paddingLeft: 10,\n    fontSize: 17,\n    fontFamily: 'FontTwo',\n    borderRadius: 50,\n    borderWidth: 1,\n    borderColor: theme.colors.primary\n  },\n  button: {\n    backgroundColor: theme.colors.primary,\n    fontFamily: 'FontThree',\n    fontSize: 20,\n    width: 100,\n    borderRadius: 50,\n    marginTop: 10\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 20\n  },\n  link: {\n    fontWeight: \"bold\",\n    color: theme.colors.primary,\n    fontFamily: 'FontTwo'\n  }\n});","map":{"version":3,"sources":["C:/Users/MIDITECH/Desktop/GraduatedProject-master/components/Screens/SignUp/SignUp.js"],"names":["React","useState","nameValidator","Logo","TextInput","theme","emailValidator","passwordValidator","BackButton","Title","SignUp","navigation","value","error","userName","setName","emailAdd","setEmail","passwordFirst","setPassword","onSignUpPressed","nameError","emailError","passwordError","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","res","success","alert","message","props","reset","index","routes","name","console","log","done","padding","navigate","styles","container","color","colors","primary","fontSize","fontFamily","textInput","text","button","surface","row","replace","link","StyleSheet","create","justifyContent","alignItems","height","width","paddingLeft","borderRadius","borderWidth","borderColor","backgroundColor","marginTop","flexDirection","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { View, StyleSheet, TouchableOpacity, Text, Button } from \"react-native\";\nimport { nameValidator } from \"../../../helpers/nameValidator\";\nimport Logo from \"../Logo\";\nimport TextInput from \"../../Texts/TextInput\";\nimport { theme } from \"../../../core/theme\";\nimport { emailValidator } from \"../../../helpers/emailValidator\";\nimport { passwordValidator } from \"../../../helpers/passwordValidator\";\nimport BackButton from '../../Buttons/BackButton';\nimport Title from \"../../Texts/Title\";\n\nexport default function SignUp({ navigation }) {\n  const [userName, setName] = useState({ value: \"\", error: \"\" });\n  const [emailAdd, setEmail] = useState({ value: \"\", error: \"\" });\n  const [passwordFirst, setPassword] = useState({ value: \"\", error: \"\" });\n  const onSignUpPressed = () => {\n    const nameError = nameValidator(userName.value);\n    const emailError = emailValidator(emailAdd.value);\n    const passwordError = passwordValidator(passwordFirst.value);\n    if (emailError || passwordError || nameError) {\n      setName({ ...userName, error: nameError });\n      setEmail({ ...emailAdd, error: emailError });\n      setPassword({ ...passwordFirst, error: passwordError });\n      return;\n    }\n    else {\n        fetch(\"https://192.168.1.104:1322/signup\", {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n         body: JSON.stringify({\n            emailAdd: emailAdd,\n            passwordFirst: passwordFirst,\n            userName: userName,\n\n          }),\n        })\n          .then((response) => response.json())\n          .then((res) => {\n            if (res.success === true) {\n              alert(res.message);\n              this.props.navigation.reset({\n                //Using reset avoid you to go back to login Screen\n                index: 0,\n                routes: [\n                  {\n                    name: \"HomePage\",\n                  /*  params: {\n                      name: this.state.username,\n                      weight: this.state.weight,\n                      height: this.state.height,\n                      gender: this.state.value,\n                      age: this.state.age,\n                      emailsign: this.state.emailsign,\n                      firstname: this.state.firstname,\n                      passwordsign: this.state.passwordsign,\n                      lastname: this.state.lastname,\n                      country: this.state.country,\n                    },*/\n                  },\n                ],\n              });\n            } \n            else {\n              alert(res.message);\n              console.log(res);\n              console.log(\"err\")\n            }\n          })\n          .done();\n      };\n    };\n\n    return (\n      <><View style={{ padding: 20, }}><BackButton goBack={() => navigation.navigate('HomePage')} /></View><View style={styles.container}>\n\n        <Logo />\n        <Title color={{ color: theme.colors.primary }} size={{ fontSize: 20 }} fontFamily={{ fontFamily: 'FontThree' }}>Create New Account</Title>\n        <TextInput\n          style={styles.textInput}\n          label=\"Name\"\n          returnKeyType=\"next\"\n          value={userName.value}\n          onChangeText={(text) => setName({ value: text, error: \"\" })}\n          error={!!userName.error}\n          errorText={userName.error}\n          placeholder=\"Name\" />\n        <TextInput\n          style={styles.textInput}\n          label=\"Email\"\n          returnKeyType=\"next\"\n          value={emailAdd.value}\n          onChangeText={(text) => setEmail({ value: text, error: \"\" })}\n          error={!!emailAdd.error}\n          errorText={emailAdd.error}\n          autoCapitalize=\"none\"\n          autoCompleteType=\"email\"\n          textContentType=\"emailAddress\"\n          keyboardType=\"email-address\"\n          placeholder=\"Email Address\" />\n        <TextInput\n          style={styles.textInput}\n          label=\"Password\"\n          returnKeyType=\"done\"\n          value={passwordFirst.value}\n          onChangeText={(text) => setPassword({ value: text, error: \"\" })}\n          error={!!passwordFirst.error}\n          errorText={passwordFirst.error}\n          placeholder=\"Password\"\n          secureTextEntry={true}\n           />\n        <View style={styles.button}>\n          <Button\n            onPress={onSignUpPressed}\n            title={'Sign Up'}\n            color={theme.colors.surface} /></View>\n\n        <View style={styles.row}>\n          <Text style={{ color: theme.colors.primary, fontFamily: 'FontThree' }}>\n            Already have an account?{\" \"}\n          </Text>\n          <TouchableOpacity onPress={() => navigation.replace(\"LogIn\")}>\n            <Text style={styles.link}>Login</Text>\n          </TouchableOpacity>\n        </View></View></>\n\n\n    );\n  }\n\n  const styles = StyleSheet.create({\n\n    container: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 50,\n\n    },\n    textInput: {\n      height: 50,\n      width: '100%',\n      paddingLeft: 10,\n      fontSize: 17,\n      fontFamily: 'FontTwo',\n      borderRadius: 50,\n      borderWidth: 1,\n      borderColor: theme.colors.primary\n\n    },\n    button: {\n      backgroundColor: theme.colors.primary,\n      fontFamily: 'FontThree',\n      fontSize: 20,\n      width: 100,\n      borderRadius: 50,\n      marginTop: 10\n\n    },\n    row: {\n      flexDirection: 'row',\n      marginTop: 20\n    },\n    link: {\n      fontWeight: \"bold\",\n      color: theme.colors.primary,\n      fontFamily: 'FontTwo'\n    },\n  });\n"]},"metadata":{},"sourceType":"module"}